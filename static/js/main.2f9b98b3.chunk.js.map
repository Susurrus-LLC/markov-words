{"version":3,"sources":["components/form/form.module.sass","components/results/results.module.sass","components/page-footer/pageFooter.module.sass","components/page-header/index.tsx","components/results/index.tsx","components/form/index.tsx","components/page-footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","styles","header","title","Results","props","results","result","Form","useState","input","setInput","min","setMin","max","setMax","num","setNum","text","setText","starters","setStarters","startersReady","setStartersReady","terminals","setTerminals","terminalsReady","setTerminalsReady","dictionary","setDictionary","dictionaryReady","setDictionaryReady","output","setOutput","samples","sample","setSample","useEffect","toLowerCase","split","filter","word","length","makeWords","choose","arr","Math","floor","random","generate","getLookup","slice","join","letter","next","lookup","Object","prototype","hasOwnProperty","call","push","i","newStart","newTerm","newDict","j","build","options","map","name","main","form","id","placeholder","value","onChange","e","target","type","select","findIndex","onClick","preventDefault","Footer","footer","copyright","href","rel","start","current","Date","getFullYear","toString","years","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","undefined","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","includes","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2f9b98b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__22hWQ\",\"text\":\"form_text__3NhMR\",\"options\":\"form_options__1LiPz\",\"generate\":\"form_generate__LBG0Q\",\"results\":\"form_results__3ls0O\",\"num\":\"form_num__naa3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"results_results__3DHBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"pageFooter_footer__2kzVi\"};","import React from 'react'\n\nimport styles from './pageHeader.module.sass'\n\nconst Header: React.FC = () => {\n  return (\n    <header className={styles.header}>\n      <h1 className={styles.title}>Markov Word Generator</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport styles from './results.module.sass'\n\nconst Results: React.FC<{ results: string }> = props => (\n  <div className={styles.results}>\n    <p className={styles.result}>{props.results}</p>\n  </div>\n)\n\nexport default Results\n","import React, { useState, useEffect } from 'react'\n\nimport samples from '../../data/sampleTexts.json'\nimport Results from '../results'\n\nimport styles from './form.module.sass'\n\nconst Form: React.FC = () => {\n  interface Terminals {\n    [propName: string]: boolean\n  }\n\n  interface Dictionary {\n    [propName: string]: string[]\n  }\n\n  interface SampleTexts {\n    name: string\n    text: string\n  }\n\n  const [input, setInput] = useState('')\n  const [min, setMin] = useState(3)\n  const [max, setMax] = useState(10)\n  const [num, setNum] = useState(100)\n  const [text, setText] = useState<string[]>([])\n  const [starters, setStarters] = useState<string[]>([])\n  const [startersReady, setStartersReady] = useState(false)\n  const [terminals, setTerminals] = useState<Terminals>({})\n  const [terminalsReady, setTerminalsReady] = useState(false)\n  const [dictionary, setDictionary] = useState<Dictionary>({})\n  const [dictionaryReady, setDictionaryReady] = useState(false)\n  const [output, setOutput] = useState('')\n  const [sample, setSample] = useState<SampleTexts>(samples[0])\n\n  useEffect(() => {\n    setText(\n      input\n        .toLowerCase() // make everything lowercase\n        .split(/[\\n .\"“”‘’,/#!?$#%@^&*;:{}–—=_`~[\\]()0-9]/) // split the input based on any punctuation (except ' and -), line breaks, spaces, or numbers\n        .filter(word => word.length > 0) // strip out any empty 'words'\n    )\n\n    // flag that the data needs to be rebuilt\n    setStartersReady(false)\n    setTerminalsReady(false)\n    setDictionaryReady(false)\n  }, [input])\n\n  useEffect(() => {\n    // when the data is built, trigger generation\n    if (startersReady && terminalsReady && dictionaryReady) {\n      makeWords()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [startersReady, terminalsReady, dictionaryReady])\n\n  useEffect(() => {\n    setInput(sample.text)\n  }, [sample])\n\n  // make a random choice, given options\n  const choose = (arr: string[]): string =>\n    arr[Math.floor(arr.length * Math.random())]\n\n  const build = (): void => {\n    // if the input has changed,\n    if (!startersReady || !terminalsReady || !dictionaryReady) {\n      const newStart: string[] = []\n      const newTerm: Terminals = {}\n      const newDict: Dictionary = {}\n\n      // build the dictionary, terminals, and starters\n      for (let i = 0; i < text.length; i++) {\n        // grab the word and split it into an array of letters\n        const word = text[i].split('')\n\n        // add the word-initial letter pair to the list of possible starters\n        newStart.push(word.slice(0, 2).join(''))\n\n        // add the word-final letter pair to the list of possible terminals\n        newTerm[word.slice(-2).join('')] = true\n\n        // build the dictionary and stats\n        for (let j = 0; j < word.length - 1; j++) {\n          // add lookups for single letters\n          if (Object.prototype.hasOwnProperty.call(newDict, word[j])) {\n            // if the letter is already in the dictionary, add its following letter\n            newDict[word[j]].push(word[j + 1])\n          } else {\n            // otherwise, add the letter and its following letter\n            newDict[word[j]] = [word[j + 1]]\n          }\n\n          // add lookups for paired letters after reaching the second letter\n          if (j > 0) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                newDict,\n                word[j - 1] + word[j]\n              )\n            ) {\n              // if the letter pair is already in the dictionary, add its following letter\n              newDict[word[j - 1] + word[j]].push(word[j + 1])\n            } else {\n              // otherwise, add the letter pair and its following letter\n              newDict[word[j - 1] + word[j]] = [word[j + 1]]\n            }\n          }\n        }\n      }\n\n      setStarters([...newStart])\n      setTerminals({ ...newTerm })\n      setDictionary({ ...newDict })\n    }\n\n    // trigger generation with useEffect\n    setStartersReady(true)\n    setTerminalsReady(true)\n    setDictionaryReady(true)\n  }\n\n  const generate = (min: number): string => {\n    // grab the last letter(s) of the word for lookup\n    const getLookup = (word: string[]): string => {\n      return word.length < 2 ? word[word.length - 1] : word.slice(-2).join('')\n    }\n\n    // start with starter letters\n    let letter = choose(starters)\n    let next = letter.split('')\n    const word = next\n    let lookup = getLookup(word)\n\n    while (Object.prototype.hasOwnProperty.call(dictionary, lookup)) {\n      // choose the next letter and add it to the word\n      next = dictionary[lookup]\n      letter = choose(next)\n      word.push(letter)\n      lookup = getLookup(word)\n\n      // if the word is long enough and the current letter is a terminal, end the loop\n      if (\n        word.length >= min &&\n        Object.prototype.hasOwnProperty.call(terminals, lookup)\n      ) {\n        break\n      }\n    }\n\n    // if the word isn't long enough, try again\n    if (word.length < min) {\n      return generate(min)\n    } else {\n      return word.join('')\n    }\n  }\n\n  const makeWords = (): void => {\n    if (!startersReady || !terminalsReady || !dictionaryReady) {\n      // if the data needs to be built, build it\n      build()\n    } else {\n      // if the data is built, generate the output\n      const results = []\n\n      // if the minimum length is greater than the maximum, display an error\n      if (min > max) {\n        results.push(\n          'Maximum length must be greater or equal to minimum length.'\n        )\n      } else if (text.length === 0) {\n        results.push('No input provided.')\n      } else if (starters.length === 0 || starters[0] === '') {\n        results.push('Internal error.')\n      } else {\n        // randomize the length of the words between the min and the max\n        for (let i = 0; i < num; i++) {\n          const length = min + Math.floor((max + 1 - min) * Math.random())\n          results.push(generate(length))\n        }\n      }\n\n      setOutput(results.join(' '))\n    }\n  }\n\n  const options = samples.map((text, i) => <option key={i}>{text.name}</option>)\n\n  return (\n    <main className={styles.main}>\n      <form className={styles.form}>\n        <textarea\n          id={styles.text}\n          className={styles.text}\n          name='text input'\n          placeholder='Enter as many words as you can. The more the better.'\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <div id={styles.options} className={styles.options}>\n          <label>\n            minimum length:{' '}\n            <input\n              id={styles.min}\n              className={styles.num}\n              name='minimum length'\n              type='number'\n              min='1'\n              max='10'\n              value={min}\n              onChange={e => setMin(+e.target.value)}\n            />\n          </label>\n          <label>\n            maximum length:{' '}\n            <input\n              id={styles.max}\n              className={styles.num}\n              name='maximum length'\n              type='number'\n              min='3'\n              max='20'\n              value={max}\n              onChange={e => setMax(+e.target.value)}\n            />\n          </label>\n          <label>\n            number of words:{' '}\n            <input\n              id={styles.num}\n              className={styles.num}\n              name='number of words'\n              type='number'\n              min='1'\n              max='9999'\n              value={num}\n              onChange={e => setNum(+e.target.value)}\n            />\n          </label>\n          <label>\n            sample text:{' '}\n            <select\n              id={styles.select}\n              className={styles.select}\n              name='sample text'\n              value={sample.name}\n              onChange={e =>\n                setSample(\n                  samples[\n                    samples.findIndex(text => text.name === e.target.value)\n                  ]\n                )\n              }\n            >\n              {options}\n            </select>\n          </label>\n        </div>\n        <button\n          id={styles.generate}\n          className={styles.generate}\n          name='generate'\n          onClick={e => {\n            e.preventDefault()\n            makeWords()\n          }}\n        >\n          Generate\n        </button>\n      </form>\n      <Results results={output} />\n    </main>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nimport styles from './pageFooter.module.sass'\n\nconst Footer: React.FC = () => {\n  const years = (): string => {\n    const start = 2019\n    const current = new Date().getFullYear()\n    return current > start ? `${start}–${current}` : start.toString()\n  }\n\n  const version = '1.0.0'\n\n  return (\n    <footer className={styles.footer}>\n      <p className={styles.copyright}>\n        Version{' '}\n        <a\n          href='https://github.com/Susurrus-LLC/markov-words/blob/master/CHANGELOG.md'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {version}\n        </a>\n        . Built by{' '}\n        <a\n          href='https://github.com/nai888'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Ian A.&nbsp;Cook\n        </a>\n        , copyright © {years()} under the{' '}\n        <a\n          href='https://github.com/Susurrus-LLC/markov-words/blob/master/LICENSE'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          AGPL-3.0 license\n        </a>\n        . See the project on{' '}\n        <a\n          href='https://github.com/Susurrus-LLC/markov-words'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          GitHub\n        </a>\n        .\n      </p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nimport Header from './components/page-header'\nimport Form from './components/form'\nimport Footer from './components/page-footer'\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <Form />\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register (config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready\n          .then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            )\n          })\n          .catch(() => {})\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller !== null) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config?.onUpdate !== undefined) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config?.onSuccess !== undefined) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        contentType?.includes('javascript') === true\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready\n          .then(registration => {\n            registration\n              .unregister()\n              .then(() => {\n                window.location.reload()\n              })\n              .catch(() => {})\n          })\n          .catch(() => {})\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister (): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister().catch(() => {})\n      })\n      .catch(() => {})\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './global.sass'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}